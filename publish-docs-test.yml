variables:
  - name: 'releaseVersion'
    value: '1.1.23'
  - name: 'repositoryName' # Name of the repository
    value: 'AzureAD/microsoft-authentication-library-for-objc'
  - name: 'repositoryBranch' # Name of the branch where version number will be updated for files that contain version number.
    value: 'master'
  - name: 'GithubServiceConnection' # Service connection name used to connect Github repository
    value: 'MSAL ObjC Service Connection'
  - name: 'docsRepositoryBranch' # Name of the branch where public reference docs will be pushed for github page
    value: 'gh-pages'

pr: none

resources:
  repositories:
  - repository: msalRepository
    type: github
    endpoint: 'GitHub for AzureAD and Azure-Samples (as aadidgit service)'
    name: $(repositoryName)
    ref: $(repositoryBranch)

jobs:
- job: TryIssueCreation
  displayName: Github Issue Creation Test
  pool:
    vmImage: 'macOS-latest'
    timeOutInMinutes: 20

  steps:
  - checkout: msalRepository
    clean: true
    submodules: true
    fetchDepth: 1
    persistCredentials: false
  
  - task: InstallSSHKey@0
    displayName: Install SSH Key for MSAL Github Repo
    inputs:
      knownHostsEntry: '$(sshKnownHosts)'
      sshPublicKey: '$(sshPublicKey)'
      sshKeySecureFile: 'msal_objc_private_key'
      addEntryToConfig: true
      configHostAlias: 'ADO Release Pipeline Public Key'
      configHostname: 'github.com'
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
            ssh-keyscan github.com | tee -a ~/.ssh/known_hosts
            git remote set-url origin git@github.com:$(repositoryName).git

            authorName=$(git log -1 --pretty=format:'%an')
            authorEmail=$(git log -1 --pretty=format:'%ae')
            git config --global user.email "${authorEmail}"
            git config --global user.name "${authorName}"

            author=$(git log -1 --pretty=format:'%an <%ae>') 
            curl -X "POST" "https://api.github.com/repos/AzureAD/microsoft-authentication-library-for-objc/issues?state=all" \
              -H "Cookie: logged_in=no" \
              #-H "Authorization: token THEd13GITHUBfb87TOKENa4FROM5eSETTINGS" \
              -H "Content-Type: text/plain; charset=utf-8" \
              -d $'{
                      "title": "Creating a test issue",
                      "body": "TBD",
                      "assignees": [
                        "${author}"
                      ],
                      "labels": [
                        "automation failure"
                      ]
                  }'
      workingDirectory: '$(Build.SourcesDirectory)'
      failOnStderr: false
